{"version":3,"sources":["components/Box.js","components/Board.js","components/ScoreBoard.js","components/ResetButton.js","App.js","index.js"],"names":["Box","_ref","value","onClick","style","React","createElement","className","Board","board","map","idx","ScoreBoard","scores","xPlaying","xScore","oScore","concat","ResetButton","resetBoard","App","WIN_CONDITIONS","setBoard","useState","Array","fill","setXPlaying","setScores","gameOver","setGameOver","checkWinner","i","length","x","y","z","boxIdx","updatedBoard","winner","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2SAIO,MAAMA,EAAMC,IAAsB,IAArBC,MAACA,EAAKC,QAAEA,GAAQF,EAEhC,MAAMG,EAAkB,MAAVF,EAAgB,QAAU,QAExC,OACIG,IAAAC,cAAA,UAAQC,UAAWH,EAAOD,QAASA,GAAUD,UCH9C,MAAMM,EAAQP,IAAsB,IAArBQ,MAACA,EAAKN,QAAEA,GAAQF,EAClC,OACII,IAAAC,cAAA,OAAKC,UAAU,SACVE,EAAMC,IAAI,CAACR,EAAOS,IACRN,IAAAC,cAACN,EAAG,CAACE,MAAOA,EAAOC,QAASA,IAAgB,OAAVD,GAAkBC,EAAQQ,cCN5E,MAAMC,EAAaX,IAAwB,IAAvBY,OAACA,EAAMC,SAAEA,GAASb,EAEzC,MAAMc,OAACA,EAAMC,OAAEA,GAAUH,EAEzB,OACIR,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,QAAMC,UAAS,iBAAAU,QAAoBH,GAAY,aAAc,OAAKC,GAClEV,IAAAC,cAAA,QAAMC,UAAS,iBAAAU,OAAmBH,GAAY,aAAc,OAAKE,WCPtE,MAAME,EAAcjB,IAAkB,IAAjBkB,WAACA,GAAWlB,EACpC,OACII,IAAAC,cAAA,UAAQC,UAAU,eAAeJ,QAASgB,GAAY,UC0E/CC,MAxEf,WAEE,MAAMC,EAAiB,CACrB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGFZ,EAAOa,GAAYC,mBAASC,MAAM,GAAGC,KAAK,QAC1CX,EAAUY,GAAeH,oBAAS,IAClCV,EAAQc,GAAaJ,mBAAS,CAACR,OAAQ,EAAGC,OAAQ,KAClDY,EAAUC,GAAeN,oBAAS,GA8BnCO,EAAerB,IACnB,IAAK,IAAIsB,EAAI,EAAGA,EAAIV,EAAeW,OAAQD,IAAK,CAC9C,MAAOE,EAAGC,EAAGC,GAAKd,EAAeU,GACjC,GAAItB,EAAMwB,IAAMxB,EAAMwB,KAAOxB,EAAMyB,IAAMzB,EAAMyB,KAAOzB,EAAM0B,GAE1D,OADAN,GAAY,GACLpB,EAAMwB,KAKbd,EAAaA,KACjBU,GAAY,GACZP,EAASE,MAAM,GAAGC,KAAK,QAGzB,OACEpB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,MAAIC,UAAU,SAAQ,eACtBF,IAAAC,cAAA,MAAIC,UAAU,eAAc,mCAC5BF,IAAAC,cAACM,EAAU,CAACC,OAAQA,EAAQC,SAAUA,IACtCT,IAAAC,cAACE,EAAK,CAACC,MAAOA,EAAON,QAASyB,EAAWT,EAhDrBiB,IACtB,MAAMC,EAAe5B,EAAMC,IAAI,CAACR,EAAOS,IACjCA,IAAQyB,GACU,IAAbtB,EAAoB,IAAM,IAE1BZ,GAILoC,EAASR,EAAYO,GAE3B,GAAIC,EACF,GAAe,MAAXA,EAAgB,CAClB,IAAIvB,OAACA,GAAUF,EACfE,GAAU,EACVY,EAAU,IAAId,EAAQE,eACjB,CACL,IAAIC,OAACA,GAAUH,EACfG,GAAU,EACVW,EAAU,IAAId,EAAQG,WAI1BM,EAASe,GAETX,GAAaZ,MAwBXT,IAAAC,cAACY,EAAW,CAACC,WAAYA,MCtElBoB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,IAAAC,cAACD,IAAMuC,WAAU,KACfvC,IAAAC,cAACc,EAAG","file":"static/js/main.7d4a55f2.chunk.js","sourcesContent":["import React from 'react'\n\nimport \"./Box.css\"\n\nexport const Box = ({value, onClick}) => {\n\n    const style = value === \"X\" ? \"box x\" : \"box o\";\n\n    return (\n        <button className={style} onClick={onClick}>{value}</button>\n    )\n}","import React from \"react\";\n\nimport { Box } from \"./Box\";\nimport \"./Board.css\"\n\n\nexport const Board = ({board, onClick}) => {\n    return (\n        <div className=\"board\">\n            {board.map((value, idx) => {\n                return <Box value={value} onClick={() => value === null && onClick(idx)}/>\n            })}\n        </div>\n    )\n}","import React from \"react\";\n\nimport \"./ScoreBoard.css\"\n\nexport const ScoreBoard = ({scores, xPlaying}) => {\n\n    const {xScore, oScore} = scores;\n\n    return(\n        <div className=\"scoreboard\">\n            <span className={`score x-score ${!xPlaying && \"inactive\"}`}>X - {xScore}</span>\n            <span className={`score o-score ${xPlaying && \"inactive\"}`}>O - {oScore}</span>\n        </div>\n    )\n}","import React from \"react\";\n\nimport \"./ResetButton.css\"\n\nexport const ResetButton = ({resetBoard}) => {\n    return (\n        <button className=\"reset-button\" onClick={resetBoard}>Reset</button>\n    )\n}","import React, {useState} from 'react';\n\nimport './App.css';\n\nimport { Board } from './components/Board';\nimport { ScoreBoard } from './components/ScoreBoard';\nimport { ResetButton } from './components/ResetButton';\n\nfunction App() {\n\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ]\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xPlaying, setXPlaying] = useState(true);\n  const [scores, setScores] = useState({xScore: 0, oScore: 0});\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleBoxClick = (boxIdx) => {\n    const updatedBoard = board.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying === true ? \"X\" : \"O\"\n      } else {\n        return value;\n      }\n    })\n\n    const winner = checkWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"X\") {\n        let {xScore} = scores;\n        xScore += 1;\n        setScores({...scores, xScore});\n      } else {\n        let {oScore} = scores;\n        oScore += 1;\n        setScores({...scores, oScore});\n      }\n    }\n\n    setBoard(updatedBoard);\n\n    setXPlaying(!xPlaying);\n  }\n\n  const checkWinner = (board) => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  }\n\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>Tic-Tac-Toe</h1>\n      <h2 className='description'>By: Connor Ajersch | 11-26-2023</h2>\n      <ScoreBoard scores={scores} xPlaying={xPlaying}/>\n      <Board board={board} onClick={gameOver ? resetBoard : handleBoxClick}/>\n      <ResetButton resetBoard={resetBoard} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}